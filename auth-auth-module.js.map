{"version":3,"sources":["./src/app/@auth/auth.component.ts","./src/app/@auth/auth.component.html","./src/app/@shared/services/auth.service.ts","./src/app/@shared/models/jwt-helper.model.ts","./src/app/@auth/register/register.component.ts","./src/app/@auth/register/register.component.html","./src/app/@auth/auth.routing.ts","./src/app/@auth/login/login.component.ts","./src/app/@auth/login/login.component.html","./src/app/@auth/reset-password/reset-password.component.ts","./src/app/@auth/reset-password/reset-password.component.html","./src/app/@auth/auth.module.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: [ './auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nb-layout>\n\n  <nb-layout-column>\n    <router-outlet></router-outlet>\n  </nb-layout-column>\n\n</nb-layout>\n","import { HttpClient }                      from '@angular/common/http';\nimport { Injectable, Self }                from '@angular/core';\nimport { JwtHelperService }                from '@auth0/angular-jwt';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { map, tap }                        from 'rxjs/operators';\nimport { JwtHelper }                       from '../models/jwt-helper.model';\n\n@Injectable({\n              providedIn: 'root',\n            })\nexport class AuthService {\n\n  public jwtToken: BehaviorSubject<JwtHelper> = new BehaviorSubject<JwtHelper>(new JwtHelper());\n\n  constructor(\n    private _httpService: HttpClient,\n    @Self() private _jwtHelper: JwtHelperService,\n  ) {\n  }\n\n  /**\n   * isTokenExpired and update the jwtHelper\n   * @returns {boolean}\n   */\n  public get isTokenExpired(): boolean {\n    const isTokenExpired: boolean = this._jwtHelper.isTokenExpired(this._jwtHelper.tokenGetter(), 30);\n    if (isTokenExpired) {\n      this.jwtToken.next(\n        new JwtHelper(\n          {\n            expired: true,\n            token: this._jwtHelper.tokenGetter(),\n            isAuthenticated: true,\n          },\n        ),\n      );\n    }\n    return isTokenExpired;\n  }\n\n  public login(form: { username: string, password: string }): Observable<JwtHelper> {\n    return of(\n      new JwtHelper(\n        {\n          isAuthenticated: true,\n          token: 'BLAHBLAHBLAH',\n          expired: false,\n        },\n      ),\n    );\n    // return this._httpService\n    //            .post<string>('/auth/login', form, { responseType: 'json' })\n    //            .pipe(\n    //              map((token: string) => {\n    //                return new JwtHelper(\n    //                  {\n    //                    expired: false,\n    //                    token,\n    //                    isAuthenticated: true,\n    //                  },\n    //                );\n    //              }),\n    //            );\n  }\n}\n","export class JwtHelper {\n  public expired: boolean = true;\n  public token: string = '';\n  public isAuthenticated: boolean = false;\n\n  constructor(jwtHelper?: Partial<JwtHelper>) {\n    if (jwtHelper) {\n      Object.assign(this, jwtHelper);\n    } else {\n      Object.create(this);\n    }\n  }\n}\n","import { Location }                           from '@angular/common';\nimport { Component, OnInit }                  from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  public showPassword: boolean = false;\n  public loginForm: FormGroup = new FormGroup(\n    {\n      username: new FormControl(null, [ Validators.required ]),\n      password: new FormControl(null, [ Validators.required ]),\n    },\n  );\n\n  constructor(\n    private _location: Location,\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  public navigatePrevious(): void {\n    this._location.back();\n  }\n\n  public login(): void {\n\n  }\n}\n","<nb-card>\n  <nb-card-header fxLayoutAlign=\"space-between center\">\n    <button nbButton\n            ghost\n            status=\"primary\"\n            shape=\"round\"\n            size=\"giant\"\n            (click)=\"navigatePrevious()\">\n      <nb-icon icon=\"arrow-back\" ></nb-icon>\n    </button>\n  </nb-card-header>\n  <nb-card-body [fxLayoutAlign]=\"'center center'\">\n\n    <form [formGroup]=\"loginForm\"\n          (ngSubmit)=\"login()\"\n          [fxFlex.lt-md]=\"'100%'\"\n          [fxFlex]=\"'1 1 560px'\"\n          [fxLayout]=\"'column'\"\n          [fxLayoutAlign]=\"'center center'\"\n          [fxLayoutGap]=\"'32px'\">\n\n      <h1 class=\"title\">Enregistrement</h1>\n\n      <nb-form-field>\n        <nb-icon nbPrefix icon=\"person-outline\" pack=\"eva\"></nb-icon>\n        <input nbInput\n               fullWidth\n               [type]=\"'text'\"\n               [formControlName]=\"'username'\">\n      </nb-form-field>\n\n      <nb-form-field>\n        <nb-icon nbPrefix icon=\"unlock-outline\" pack=\"eva\"></nb-icon>\n\n        <input nbInput\n               fullWidth\n               [type]=\"showPassword ? 'text' : 'password'\"\n               [formControlName]=\"'password'\">\n        <button nbSuffix\n                nbButton\n                ghost\n                (click)=\"showPassword = !showPassword\">\n          <nb-icon [icon]=\"showPassword ? 'eye-outline' : 'eye-off-2-outline'\"\n                   pack=\"eva\"\n                   [attr.aria-label]=\"showPassword ? 'hide password' : 'show password'\">\n          </nb-icon>\n        </button>\n      </nb-form-field>\n\n      <button nbButton\n              hero\n              status=\"primary\">\n        S'enregistrer\n      </button>\n\n      <p>\n        Vous possèdez déjà un compte ? <a [routerLink]=\"'../login'\">Se connecter</a>\n      </p>\n\n\n    </form>\n  </nb-card-body>\n</nb-card>\n","import { NgModule }               from '@angular/core';\nimport { RouterModule, Routes }   from '@angular/router';\nimport { AuthComponent }          from './auth.component';\nimport { LoginComponent }         from './login/login.component';\nimport { RegisterComponent }      from './register/register.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'login',\n        pathMatch: 'full',\n      },\n      {\n        path: 'login',\n        component: LoginComponent,\n      },\n      {\n        path: 'register',\n        component: RegisterComponent,\n      },\n      {\n        path: 'reset-password',\n        component: ResetPasswordComponent,\n      },\n    ],\n  },\n];\n\n@NgModule(\n  {\n    imports: [ RouterModule.forChild(routes) ],\n    exports: [ RouterModule ],\n  },\n)\nexport class AuthRouting {}\n","import { Component, OnInit }                  from '@angular/core';\nimport { Location }                           from '@angular/common';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router }                             from '@angular/router';\nimport { ToastrService }                      from 'ngx-toastr';\nimport { AuthService }                        from '../../@shared/services/auth.service';\n\n@Component({\n             selector: 'app-login',\n             templateUrl: './login.component.html',\n             styleUrls: [ './login.component.scss' ],\n           })\nexport class LoginComponent implements OnInit {\n\n  public showPassword: boolean = false;\n  public loginForm: FormGroup = new FormGroup(\n    {\n      username: new FormControl(null, [ Validators.required ]),\n      password: new FormControl(null, [ Validators.required ]),\n    },\n  );\n\n  constructor(\n    private _routerService: Router,\n    private _location: Location,\n    private _authService: AuthService,\n    private _toastrService: ToastrService,\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  public login(): void {\n    this._authService.login(this.loginForm.value).subscribe(\n      () => {\n        this._toastrService.success('Bienvenue dans My-planning');\n        this._routerService.navigate(['/app']);\n      },\n      () => {\n        this._toastrService.error('Une erreur est survenue');\n      }\n    );\n  }\n}\n","<nb-card>\n  <nb-card-header fxLayoutAlign=\"space-between center\">\n    <button nbButton\n            ghost\n            status=\"primary\"\n            shape=\"round\"\n            size=\"giant\"\n            [routerLink]=\"'/homepage'\">\n      <nb-icon icon=\"arrow-back\"></nb-icon>\n    </button>\n  </nb-card-header>\n  <nb-card-body [fxLayoutAlign]=\"'center center'\">\n\n    <form [formGroup]=\"loginForm\"\n          (ngSubmit)=\"login()\"\n          [fxFlex.lt-md]=\"'100%'\"\n          [fxFlex]=\"'1 1 560px'\"\n          [fxLayout]=\"'column'\"\n          [fxLayoutAlign]=\"'center center'\"\n          [fxLayoutGap]=\"'32px'\">\n\n      <h1 class=\"title\">Connexion</h1>\n\n      <nb-form-field>\n        <label for=\"username-input\">Nom d'utilisateur :</label>\n        <nb-icon nbPrefix\n                 icon=\"person-outline\"\n                 pack=\"eva\"\n                 [style.margin-top]=\"'1.6rem'\">\n        </nb-icon>\n        <input nbInput\n               id=\"username-input\"\n               fullWidth\n               [type]=\"'text'\"\n               [formControlName]=\"'username'\">\n      </nb-form-field>\n\n      <nb-form-field>\n        <div class=\"margin-bottom-xs\"\n             [fxLayout]=\"'row'\"\n             [fxLayoutAlign]=\"'space-between center'\">\n          <span [fxHide.lt-md]=\"true\">Mot de passe :</span>\n\n          <a [routerLink]=\"'../reset-password'\">Mot de passe oublié ?</a>\n        </div>\n        <nb-icon nbPrefix\n                 icon=\"unlock-outline\"\n                 pack=\"eva\"\n                 [style.margin-top]=\"'1.6rem'\">\n        </nb-icon>\n\n        <input nbInput\n               fullWidth\n               [type]=\"showPassword ? 'text' : 'password'\"\n               [formControlName]=\"'password'\">\n        <button nbSuffix\n                nbButton\n                ghost\n                (click)=\"showPassword = !showPassword\"\n                [style.margin-top]=\"'1.6rem'\">\n          <nb-icon [icon]=\"showPassword ? 'eye-outline' : 'eye-off-2-outline'\"\n                   pack=\"eva\"\n                   [attr.aria-label]=\"showPassword ? 'hide password' : 'show password'\">\n          </nb-icon>\n        </button>\n      </nb-form-field>\n\n      <button nbButton\n              hero\n              status=\"primary\"\n              type=\"submit\">\n        Se connecter\n      </button>\n\n      <p>Pas de compte ?\n        <a [routerLink]=\"'../register'\">S'enregistrer</a>\n      </p>\n\n\n    </form>\n  </nb-card-body>\n</nb-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>reset-password works!</p>\n","import { NgModule }               from '@angular/core';\nimport { ToastrModule }           from 'ngx-toastr';\nimport { SharedModule }           from '../@shared/shared.module';\nimport { AuthRouting }            from './auth.routing';\nimport { AuthComponent }          from './auth.component';\nimport { LoginComponent }         from './login/login.component';\nimport { RegisterComponent }      from './register/register.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n@NgModule(\n  {\n    declarations: [\n      AuthComponent,\n      LoginComponent,\n      RegisterComponent,\n      ResetPasswordComponent,\n    ],\n    imports: [\n      SharedModule,\n      AuthRouting,\n    ],\n  },\n)\nexport class AuthModule {}\n"],"sourceRoot":"webpack:///"}